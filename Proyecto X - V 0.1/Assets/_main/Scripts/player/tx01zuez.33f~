using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[RequireComponent(typeof(HealthController))]
[RequireComponent(typeof(Rigidbody2D))]
[RequireComponent(typeof(AudioSource))]
public class PlayerController : MonoBehaviour
{
    [SerializeField] private float speed;

    [SerializeField] private Animator anim;
    [SerializeField] private Transform center;
    [SerializeField] private Transform spawnPointAtack1;
    [SerializeField] private GameObject bulletFire;
    [SerializeField] private GameObject melee;

    [SerializeField] private AudioClip espada = null;
    private AudioSource aS;

    private Rigidbody2D rb;
    private Vector2 movement;
    private float movementX;
    private float movementY;

    private HealthController healthController;

    private void Awake()
    {
        healthController = GetComponent<HealthController>();
        rb = GetComponent<Rigidbody2D>();
        aS = GetComponent<AudioSource>();
    }

    private void Update()
    {

        if (healthController.IsAlive() == false)
        {
            Destroy(gameObject);
        }

        float t = Time.deltaTime;
        movementX = Input.GetAxisRaw("Horizontal");
        movementY = Input.GetAxisRaw("Vertical");
        movement = new Vector2(movementX, movementY).normalized;

        if (movementX != 0)
        {
            anim.SetFloat("Movement X", movementX);
        }
        else if (movementY != 0)
        {
            anim.SetFloat("Movement Y", movementY);
        }
        else if (movementX != 0 && movementY != 0)
        {
            anim.SetFloat("Movement X", movementX);
            anim.SetFloat("Movement Y", movementY);
        }
        

        anim.SetFloat("Speed", movement.sqrMagnitude);


        if (movementY == 1 && movementX == 1)
        {
            center.rotation = Quaternion.Euler(new Vector3(0f, 0f, 125f));
        }
        else if (movementY == -1 && movementX == 1)
        {
            center.rotation = Quaternion.Euler(new Vector3(0f, 0f, 45f));
        }
        else if (movementY == 1 && movementX == -1)
        {
            center.rotation = Quaternion.Euler(new Vector3(0f, 0f, 225f));
        }
        else if (movementY == -1 && movementX == -1)
        {
            center.rotation = Quaternion.Euler(new Vector3(0f, 0f, 315f));
        }
        else if (movementY == 1)
        {
            center.rotation = Quaternion.Euler(new Vector3(0f, 0f, 180f));
        }
        else if (movementY == -1)
        {
            center.rotation = Quaternion.Euler(new Vector3(0f, 0f, 0f));
        }
        else if (movementX == 1)
        {
            center.rotation = Quaternion.Euler(new Vector3(0f, 0f, 90f));
        }
        else if (movementX == -1)
        {
            center.rotation = Quaternion.Euler(new Vector3(0f, 0f, 270f));
        }

        if (Input.GetKeyDown(KeyCode.Mouse0))
        {
            melee.SetActive(true);
            anim.SetBool("DownSlash", true);
            aS.clip = espada;
            aS.Play();
            Invoke("falseMele", 0.5f);
            Invoke("falseDownSlash", 0.5f);
        }

        if (Input.GetKeyDown(KeyCode.Mouse1))
        {
            Instantiate(bulletFire, spawnPointAtack1.position, spawnPointAtack1.rotation);
            anim.SetBool("DownCast", true);
            Invoke("falseDownCast", 0.5f);
        }
    }

    private void FixedUpdate()
    {
        float t = Time.fixedDeltaTime;

        rb.MovePosition(rb.position + movement * speed * t);
    }

    private void falseDownSlash()
    {
        anim.SetBool("DownSlash", false);
    }
    private void falseDownCast()
    {
        anim.SetBool("DownCast", false);
    }

    private void falseMele()
    {
        melee.SetActive(false);
    }
}
